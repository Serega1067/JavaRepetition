package JavaOOPLecture1;

public class OOPLecture1 {
    public static void main(String[] args) {
        // Введение в ООП.
        // Концепты и свои типы.
        // Хранение и обработка данных, часть 3.
        /*
         * Введение.
         * Правельное план - реализация только после абстракции.
         * Абстракция - что делает?
         * Поведение - как делает?
         * Спецификация - набор правил, описывающих API.
         */
        
        /*
         * Класс.
         * Класс - это "чертёж" (описание) сущности предметной
         * области, позволяющий выделить некоторые общие
         * характеристики, состояние и поведение, зависящие от
         * состояния.
         * Предметная облость - множество всех предметов (явлений)
         * решаемой проблемы.
         * Экземпляр класса - отдельный представитель класса,
         * имеющий КОНКРЕТНОЕ состояние и поведение, которое
         * полностью определяется описанием класса.
         * Состояние - набор данных (полей, атрибутов, членов класса).
         * Поведение - функции для работы с данными и выполнения
         * полезной работы.
         */

        /*
         * Экземпляр класса.
         * Состояние:
         * Поля.
         * Константы.
         * События.
         * Поведение:
         * Конструкторы.
         * Методы.
         */

        /*
         * ООП.
         * ООП - объектно-ориентированное программирование.
         * Парадигма (стиль, шаблон) разработки ПО, основными
         * понятиями которой являются классы и объекты.
         * Говорят, что разработка в стиле ООП ведётся с
         * использованием классов объектов, которые обладают
         * состоянием и поведением, зависящим от этого состояния.
         */

        /*
         * ООП: Инкапсуляция.
         * Инкапсуляция - это свойство системы, позволяющее объединить
         * данные и методы, работающие с ними в классе, скрыв детали
         * реализации и защитив от пользователя этого класса объектов.
         */
        
        /*
         * ООП: Наследование.
         * Наследование - это свойство системы, позволяющее описать
         * новый класс на основе уже существующего, с частично или
         * полностью заимствующейся функциональностью.
         * Класс, от которого производится наследование, называется
         * базовым или родительским.
         * Новый класс - потомком, наследником или производным классом.
         */

        /*
         * ООП: Полиморфизм.
         * Полиморфизм - это свойство системы, использовать
         * объекты с одинаковым интерфейсом без информации о типе
         * и внутренней структуре объекта.
         * Полиморфизм - способность использовать объект вне
         * зависимости от его реализации, благодаря, полиморфной
         * переменной - это переменная, которая может принимать
         * значения различных типов.
         */
    }
}
